controller:
  installPlugins:
    - kubernetes:latest  
    - configuration-as-code:latest
    - keycloak:2.3.2
  javaOpts: "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true"
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  JCasC:
    configScripts:
      security: |
        jenkins:
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          securityRealm:
            keycloak:
              clientId: "jenkins"
              clientSecret: "3bZvxR0mn0TaSjn52eOit68a21cAjlyL"              
              serverUrl: "http://k-keycloak.softworks.co.kr:31370"
              realm: "kubeworks"
              tokenUrl: "http://k-keycloak.softworks.co.kr:31370/realms/kubeworks/protocol/openid-connect/token"
              userInfoUrl: "http://k-keycloak.softworks.co.kr:31370/realms/kubeworks/protocol/openid-connect/userinfo"
              loginUrl: "http://k-keycloak.softworks.co.kr:31370/realms/kubeworks/protocol/openid-connect/auth"
              logoutUrl: "http://k-keycloak.softworks.co.kr:31370/realms/kubeworks/protocol/openid-connect/logout"
              disableSslVerification: true
              json:
                realm: "kubeworks"
                auth-server-url: "http://k-keycloak.softworks.co.kr:31370/"
                ssl-required: "none"
                resource: "jenkins"
                credentials:
                  secret: "3bZvxR0mn0TaSjn52eOit68a21cAjlyL"
                confidential-port: 0
              roles:
                - "admin"
                - "user"                
  env:
    - name: KEYCLOAK_JSON
      value: /var/run/secrets/keycloak/keycloak.json                
    # - name: KEYCLOAK_CLIENT_SECRET
    #   valueFrom:
    #     secretKeyRef:
    #       name: keycloak-client-secret
    #       key: clientSecret
  volumes:
    - name: keycloak-config-volume
      configMap:
        name: keycloak-config

  volumeMounts:
    - name: keycloak-config-volume
      mountPath: /var/run/secrets/keycloak
              # clientSecret: "${KEYCLOAK_CLIENT_SECRET}"              
              # clientSecret: "3bZvxR0mn0TaSjn52eOit68a21cAjlyL"
  # JCasC:
  #   enabled: true
  #   configScripts:
  #     keycloak: |
  #       jenkins:
  #         securityRealm:
  #           keycloak:
  #             realm: "kubeworks"
  #             authServerUrl: "https://your-keycloak-server/auth"
  #             adminCredentialsId: "keycloak-admin"
  #             clientId: "your-client-id"
  #             clientSecret: "your-client-secret"
  #             disableSslVerification: false
  #         authorizationStrategy:
  #           loggedInUsersCanDoAnything:
  #             allowAnonymousRead: false    
  # JCasC:
  #   configScripts:
  #     customAgent: |
  #       jenkins:
  #         clouds:
  #           - kubernetes:
  #               name: "kubernetes"
  #               templates:
  #                 - name: "jenkins-agent"
  #                   label: "jenkins-agent"
  #                   containers:
  #                     - name: "jnlp"
  #                       image: "jenkins/inbound-agent"
  #                       args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
  #                     - name: "busybox"
  #                       image: "busybox"
  #                       command: ["cat"]
  #                       tty: true
  #                   initContainers:
  #                     - name: "init-permissions"
  #                       image: "busybox"
  #                       command: ['sh', '-c', 'chown -R jenkins:jenkins /home/jenkins/agent/workspace && chmod -R 755 /home/jenkins/agent/workspace']
  #                       volumeMounts:
  #                         - name: "workspace-volume"
  #                           mountPath: "/home/jenkins/agent/workspace"
  #                   volumes:
  #                     - name: "workspace-volume"
  #                       persistentVolumeClaim:
  #                         claimName: "jenkins-workspace-pvc"